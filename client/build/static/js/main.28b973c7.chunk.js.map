{"version":3,"sources":["routes/ServerRoutes.js","redux/actions.js","components/DataTable.js","components/AddTransactionPopup.js","components/Slider.js","components/Loader.js","scripts/FormatData.js","components/ViewTransactions.js","components/FileUpload.js","templates/colors.js","components/PieChart.js","components/BudgetAnalysis.js","components/Home.js","components/Settings.js","components/NavBar.js","components/App.js","redux/reducers.js","index.js"],"names":["convertData","dataFileToSend","a","async","axios","post","res","data","importData","options","method","url","getData","updateCategories","updateArray","fetchData","dispactch","ServerRoutes","type","payload","styles","headerStyles","default","color","textAlign","dropdown","currency","bodyStyles","DataTable","props","getStyles","header","headerStyle","style","backgroundColor","headerClasses","classes","theme","Object","keys","addStyle","bodyClasses","handleCategoryChange","event","index","categoryChange","target","value","id","getOptions","checkHeader","map","option","key","getCellContents","row","name","toString","edit","className","onChange","e","handleFilterChange","filterSelect","filterClass","getAttributeNode","setState","filterChange","state","renderTableHeader","headerData","headersJSX","filter","renderTableData","headers","rowJSX","i","cellKey","displayContents","rowKey","cellPadding","cellSpacing","border","this","React","Component","useStyles","makeStyles","modal","display","alignItems","justifyContent","paper","palette","background","boxShadow","shadows","padding","spacing","Fade","forwardRef","ref","open","in","children","onEnter","onExited","other","useSpring","from","opacity","to","onStart","onRest","div","AddTransactionPopup","console","log","useState","setOpen","Modal","aria-labelledby","aria-describedby","onClose","closePopup","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Button","onClick","variant","container","flexWrap","textField","marginLeft","marginRight","width","RangeSlider","sliderInit","getTime","setValue","minWidth","Grid","item","xs","Slider","newValue","valueLabelDisplay","min","dateRange","max","TextField","label","dateVal","minDate","Date","setTime","monthNum","Number","getUTCMonth","monthText","dayNum","getUTCDate","dayText","getUTCFullYear","setMinDate","InputLabelProps","shrink","newYear","slice","newMonth","newDay","newMin","setUTCFullYear","setMaxDate","newMax","handleUpdate","buttonText","CircularUnderLoad","CircularProgress","disableShrink","categoryOptions","parseDate","dateString","year","month","day","checkChar","getHeaders","descriptionOptions","includes","push","descriptionObjectArray","description","returnObject","numeric","getMinMaxDate","maxDate","entry","getTextDate","date","setTableData","checkDate","Category","Description","Credit","toFixed","Debit","filterCategories","filterValue","filteredData","filterDescriptions","setAnalysisData","sortCategoryCosts","b","sortTableCosts","groupCategories","graphValues","entries","sort","category","formatData","newPostDate","newTransactionDate","postedDateObj","transactionDateObj","UTC","_id","ViewTransactions","formattedData","FormatData","tableData","refresh","sliderRange","tableStart","tableHeaders","loading","handleDateUpdate","handleRedirectImport","handleRedirect","updateCategory","newCategory","updatedTable","updatedCategoryArray","updateCategoryRows","handleFilter","filterCategory","categoryData","filteredTable","handleEditCategories","editCategories","handleSaveCategories","getEditButton","marginTop","handleAddTransaction","addTransactionPopup","handleClosePopup","redirect","margin","maxWidth","connect","actions","FileUpload","selectedFile","dataLoaded","reDirect","handleChangeFile","files","loaded","handleDataFile","headersObject","handleImport","alert","FormData","append","colors","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","fontSize","fontWeight","x","y","dy","d","stroke","r","PieGraph","activeIndex","setActiveIndex","chartColors","setChartColors","useEffect","newColors","getColors","height","activeShape","onMouseEnter","handleClick","dataKey","nameKey","columnStyle","graphStyle","tableStyle","BudgetAnalysis","newDate","newData","newGraph","graphData","analysisData","handleCategoryFilter","colStyle","analysisDataStart","graphDataStart","position","paddingTop","Home","Settings","root","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","mixins","content","flexGrow","getNavOptions","text","icon","MiniDrawer","navOptions","useTheme","navSelect","setSelect","handleMenuClick","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","edge","Typography","noWrap","Drawer","direction","List","ListItem","button","ListItemIcon","ListItemText","primary","getContent","App","combineReducers","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28b973c7.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n/*********************************************************************\r\n * Async functions for all server api calls\r\n**********************************************************************/\r\n\r\nexport const convertData = async (dataFileToSend) => {\r\n  const res = await axios.post(\"/show-data\", dataFileToSend, {});\r\n  return res.data.data;\r\n}\r\n\r\nexport const importData = async (data) => {\r\n    // const env = await axios.get(\"/get-env\");\r\n    // if (env.data !== 'LOCAL') {\r\n    //   alert(\"Importing data from remote environment not allowed!\");\r\n    //   return;\r\n    // }\r\n\r\n    const options = {\r\n        method: 'POST',\r\n        url: '/import',\r\n        data: data\r\n    }\r\n    const res = await axios(options);\r\n\r\n    // if(res.data.env === 'LOCAL') {\r\n    //   const options = {\r\n    //       method: 'POST',\r\n    //       url: '/update-remote',\r\n    //   }\r\n    //   async function updateRemote() {\r\n    //     const res = await axios(options);\r\n    //     console.log(res.data);\r\n    //   }\r\n    //   updateRemote();\r\n    // }\r\n    return res.data;\r\n}\r\n\r\nexport const getData = async () => {\r\n    const options = {\r\n        method: 'GET',\r\n        url: '/data',\r\n    }\r\n    const res = await axios(options);\r\n    return res.data;\r\n}\r\n\r\nexport const updateCategories = async (updateArray) => {\r\n    const options = {\r\n        method: 'POST',\r\n        url: '/update-categories',\r\n        data: updateArray\r\n    }\r\n    const res = await axios(options);\r\n    return res.data;\r\n}","import * as ServerRoutes from '../routes/ServerRoutes.js'\r\n\r\nexport const fetchData = () => async (dispactch) => {\r\n    const res = await ServerRoutes.getData();\r\n    dispactch({ type: 'fetch-data', payload: res });\r\n}\r\n","import React from 'react';\r\nimport '../css/DataTable.css'\r\n\r\nconst styles = () => ({\r\n  //header styles\r\n  headerStyles: {\r\n    default: {\r\n      color: 'black',\r\n      textAlign: 'center',\r\n    },\r\n    dropdown: {\r\n    },\r\n    currency: {\r\n      textAlign: 'center',\r\n    },\r\n  },\r\n\r\n  //body styles\r\n  bodyStyles: {\r\n    default: {\r\n      color: 'black',\r\n    },\r\n    dropdown: {\r\n    },\r\n    currency: {\r\n      textAlign: 'right',\r\n    },\r\n  },\r\n\r\n  // bumpScrollWidth: {\r\n  //   scrollWidth: '17px'\r\n  // },\r\n\r\n});\r\n\r\n\r\nexport default class DataTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.classes = styles();\r\n    // this.checkScrollRef = React.createRef();\r\n    // this.maxTableHeight = 700;\r\n    this.state = {\r\n      filterSelect: \"All Categories\",\r\n      filterClass: \"\",\r\n    }\r\n  }\r\n\r\n  getStyles = (header, type) => {\r\n    var headerStyle = { ...header.style, backgroundColor: 'white' };\r\n    if (type === 'headers') {\r\n      const headerClasses = this.classes.headerStyles;\r\n      if (header.theme) {\r\n        for (const addStyle of Object.keys(headerClasses[header.theme])) {\r\n          headerStyle[addStyle] = headerClasses[header.theme][addStyle];\r\n        }\r\n      }\r\n      else if (!header.style) {\r\n        for (const addStyle of Object.keys(headerClasses['default'])) {\r\n          headerStyle[addStyle] = headerClasses['default'][addStyle];\r\n        }\r\n      }\r\n    }\r\n    if (type === 'body') {\r\n      const bodyClasses = this.classes.bodyStyles;\r\n      if (header.theme) {\r\n        for (const addStyle of Object.keys(bodyClasses[header.theme])) {\r\n          headerStyle[addStyle] = bodyClasses[header.theme][addStyle];\r\n        }\r\n      }\r\n      else if (!header.style) {\r\n        for (const addStyle of Object.keys(bodyClasses['default'])) {\r\n          headerStyle[addStyle] = bodyClasses['default'][addStyle];\r\n        }\r\n      }\r\n    }\r\n    return headerStyle;\r\n  }\r\n\r\n  handleCategoryChange = (event, index) => {\r\n    this.props.categoryChange(event.target.value, event.target.id, index);\r\n  }\r\n\r\n\r\n  getOptions = (header, checkHeader) => {\r\n    const optionsJSX = header.options.map((option, index) => {\r\n      return (\r\n        <option key={option.value + index} value={option.value}>{option.value}</option>\r\n      )\r\n    })\r\n    return optionsJSX;\r\n  }\r\n\r\n  getCellContents = (row, header, index) => {\r\n    const value = row[header.name];\r\n    if (header.theme === 'currency' && value.toString() === '0.00') {\r\n      return '';\r\n    }\r\n\r\n    //dropdown cell content\r\n    else if (header.theme === 'dropdown' && this.props.edit === true) {\r\n\r\n      const dropdownJSX = () => {\r\n        return (\r\n          <select\r\n            className=\"cell-select\"\r\n            key={\"select\" + index}\r\n            id={row.id}\r\n            value={value}\r\n            onChange={(e) => { this.handleCategoryChange(e, index) }}\r\n          >{this.getOptions(header)}</select>\r\n        );\r\n\r\n      }\r\n      const selectReturn = dropdownJSX();\r\n      return selectReturn;\r\n\r\n    }\r\n\r\n    //default cell content\r\n    else {\r\n      return value;\r\n    }\r\n  }\r\n\r\n  handleFilterChange = (event) => {\r\n    const filterSelect = event.target.value;\r\n    const filterClass = event.target.getAttributeNode('class');\r\n    this.setState({ filterSelect: filterSelect, filterClass: filterClass }, () => {\r\n      this.props.filterChange(this.state.filterSelect, this.state.filterClass);\r\n    })\r\n  }\r\n\r\n  renderTableHeader = (headerData) => {\r\n    const headersJSX = headerData.map((header) => {\r\n\r\n      //add theme style to value style object or set default style\r\n      var headerStyle = this.getStyles(header, 'headers');\r\n\r\n      if (header.filter === true && this.props.filter === true) {\r\n        return (\r\n          <th key={header.key} style={headerStyle}>\r\n            <select\r\n              className={header.className}\r\n              key={\"filter_\" + header.name}\r\n              value={this.state.filterSelect}\r\n              onChange={(e) => { this.handleFilterChange(e) }}\r\n            >{this.getOptions(header)}</select>\r\n          </th>\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n          <th key={header.key} style={headerStyle}>\r\n            {header.name}\r\n          </th>\r\n        )\r\n      }\r\n    })\r\n    return <tr className='header-cell'>{headersJSX}</tr>\r\n  }\r\n\r\n  renderTableData = (headers, data) => {\r\n    let tableJSX = {};\r\n    if (headers[0] === '') {\r\n      tableJSX = <tr className='body-row' key='nulltable'>No data found. Please refresh table or import data.</tr>;\r\n    }\r\n    else {\r\n      tableJSX = data.map((row, index) => {\r\n        const rowJSX = headers.map((header, i) => {\r\n          const cellKey = header.name + index;\r\n\r\n          //add theme style to value style object or set default style\r\n          var headerStyle = this.getStyles(header, 'body');\r\n\r\n          var displayContents = this.getCellContents(row, header, index);\r\n\r\n\r\n          return (\r\n            <td className='body-cell' key={cellKey} style={headerStyle}>\r\n              {displayContents}\r\n            </td>\r\n          )\r\n        })\r\n        const rowKey = \"row\" + index;\r\n        return (<tr className='body-row' key={rowKey}>{rowJSX}</tr>);\r\n      });\r\n    }\r\n    return tableJSX;\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   const nodeStyle = window.getComputedStyle(this.checkScrollRef.current);\r\n  //   const tableHeight = Number(nodeStyle.height.slice(0, nodeStyle.height.length - 2));\r\n  //   if (tableHeight >= this.maxTableHeight) {\r\n  //     this.setState({\r\n  //       adjustTableMargin: true\r\n  //     },()=>{console.log(this.state)});\r\n  //   }\r\n  // }\r\n\r\n  // getHeaderStyle = () => {\r\n  //   if (this.state.adjustTableMargin) {\r\n  //     return (\r\n  //       { marginRight: this.classes.bumpScrollWidth.scrollWidth }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div className='data-table'>\r\n        {/* <div className='table-head-div' style={this.getHeaderStyle()}> */}\r\n        <div className='table-head-div'>\r\n          <table className='table-head' cellPadding=\"0\" cellSpacing=\"0\" border=\"0\">\r\n            <thead>\r\n              {this.renderTableHeader(this.props.headers)}\r\n            </thead>\r\n          </table>\r\n        </div>\r\n        {/* <div className='table-body-div' ref={this.checkScrollRef} > */}\r\n        <div className='table-body-div' >\r\n          <table className='table-body' cellPadding=\"0\" cellSpacing=\"0\" border=\"0\">\r\n            <tbody>\r\n              {this.renderTableData(this.props.headers, this.props.data)}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { useSpring, animated } from 'react-spring/web.cjs'; // web.cjs is required for IE 11 support\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst Fade = React.forwardRef(function Fade(props, ref) {\r\n  const { in: open, children, onEnter, onExited, ...other } = props;\r\n  const style = useSpring({\r\n    from: { opacity: 0 },\r\n    to: { opacity: open ? 1 : 0 },\r\n    onStart: () => {\r\n      if (open && onEnter) {\r\n        onEnter();\r\n      }\r\n    },\r\n    onRest: () => {\r\n      if (!open && onExited) {\r\n        onExited();\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <animated.div ref={ref} style={style} {...other}>\r\n      {children}\r\n    </animated.div>\r\n  );\r\n});\r\n\r\nFade.propTypes = {\r\n  children: PropTypes.element,\r\n  in: PropTypes.bool.isRequired,\r\n  onEnter: PropTypes.func,\r\n  onExited: PropTypes.func,\r\n};\r\n\r\nexport default function AddTransactionPopup(props) {\r\n  console.log(props);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.closePopup();\r\n  };\r\n  \r\n  const handleSubmit = () => {\r\n    setOpen(false);\r\n    props.closePopup(); \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"spring-modal-title\"\r\n        aria-describedby=\"spring-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\r\n    \t\t\t\t\tSubmit\r\n            </Button>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default function RangeSlider(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState([props.sliderInit[0].getTime(),props.sliderInit[1].getTime()]);\r\n  \r\n\r\n  const handleUpdate = (event) => {\r\n   props.handleUpdate({value}); \r\n  }\r\n  \r\n  const getMin = () => {\r\n    return props.dateRange[0].getTime()\r\n  }\r\n  const getMax = () => {\r\n    return props.dateRange[1].getTime()\r\n  } \r\n  \r\n  //setMinDate for min date input box\r\n  const setMinDate = (dateVal) => {\r\n    const minDate = new Date(); \r\n    minDate.setTime(dateVal[0]);\r\n    \r\n    const monthNum = Number(minDate.getUTCMonth()) + 1\r\n    var monthText = monthNum.toString();\r\n    if (monthNum < 10) {\r\n      monthText = \"0\" + monthText;\r\n    }\r\n    \r\n    const dayNum = Number(minDate.getUTCDate());\r\n    var dayText = dayNum.toString();\r\n    if (dayNum < 10) {\r\n      dayText = \"0\" + dayText;\r\n    }\r\n    \r\n    const textDate = minDate.getUTCFullYear() + \"-\" + monthText + \"-\" + dayText;\r\n    return textDate;\r\n  }\r\n  //setMaxDate for max date input box\r\n  const setMaxDate = (dateVal) => {\r\n    const minDate = new Date(); \r\n    minDate.setTime(dateVal[1]);\r\n    const monthNum = Number(minDate.getUTCMonth()) + 1\r\n    var monthText = monthNum.toString();\r\n    if (monthNum < 10) {\r\n      monthText = \"0\" + monthText;\r\n    }\r\n    \r\n    const dayNum = Number(minDate.getUTCDate());\r\n    var dayText = dayNum.toString();\r\n    if (dayNum < 10) {\r\n      dayText = \"0\" + dayText;\r\n    }\r\n    \r\n    const textDate = minDate.getUTCFullYear() + \"-\" + monthText + \"-\" + dayText;\r\n    return textDate;\r\n  }\r\n\r\n  \r\n  \r\n  \r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  \r\n  const handleMinInputChange = (event) => {\r\n      const newYear = Number(event.target.value.slice(0,4));\r\n      const newMonth = Number(event.target.value.slice(5,7));\r\n      const newDay = Number(event.target.value.slice(8,10));\r\n      const newMin = new Date();\r\n      newMin.setUTCFullYear(newYear, (newMonth - 1), newDay);\r\n      const newValue = [newMin.getTime(), value[1]];\r\n      setValue(newValue);\r\n  };\r\n  const handleMaxInputChange = (event) => {\r\n      const newYear = Number(event.target.value.slice(0,4));\r\n      const newMonth = Number(event.target.value.slice(5,7));\r\n      const newDay = Number(event.target.value.slice(8,10));\r\n      const newMax = new Date();\r\n      newMax.setUTCFullYear(newYear, (newMonth - 1), newDay);\r\n      const newValue = [value[0], newMax.getTime()];\r\n      setValue(newValue);\r\n  };\r\n  \r\n  return (\r\n    <div style={{minWidth: props.minWidth, marginRight: '17px'}}>\r\n    \t<Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs>\r\n            <Slider\r\n            value={value}\r\n            onChange={handleChange}\r\n            valueLabelDisplay=\"off\"\r\n            aria-labelledby=\"range-slider\"\r\n            style={{minWidth: '60px'}}\r\n            min={getMin()}\r\n            max={getMax()}\r\n          />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id=\"dateMin\"\r\n              label=\"Min Date\"\r\n              type=\"date\"\r\n              value={setMinDate(value)}\r\n              className={classes.textField}\r\n              InputLabelProps={{ shrink: true, }}\r\n              onChange={handleMinInputChange}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id=\"dateMax\"\r\n              label=\"Max Date\"\r\n              type=\"date\"\r\n              value={setMaxDate(value)}\r\n              className={classes.textField}\r\n              InputLabelProps={{ shrink: true, }}\r\n              onChange={handleMaxInputChange}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item>\r\n           <Button onClick={handleUpdate} variant=\"contained\" color=\"primary\">\r\n             {props.buttonText}\r\n          </Button>\r\n         </ Grid>\r\n\r\n      </Grid>\r\n\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function CircularUnderLoad() {\r\n  return <CircularProgress disableShrink />;\r\n}","const categoryOptions = [\r\n  { id: \"Airfare\", value: \"Airfare\" },\r\n  { id: \"Car Rental\", value: \"Car Rental\" },\r\n  { id: \"Car Expense\", value: \"Car Expense\" },\r\n  { id: \"Dining\", value: \"Dining\" },\r\n  { id: \"Donation\", value: \"Donation\" },\r\n  { id: \"Education\", value: \"Education\" },\r\n  { id: \"Entertainment\", value: \"Entertainment\" },\r\n  { id: \"Fee/Interest Charge\", value: \"Fee/Interest Charge\" },\r\n  { id: \"Gas/Automotive\", value: \"Gas/Automotive\" },\r\n  { id: \"Groceries\", value: \"Groceries\" },\r\n  { id: \"Health Care\", value: \"Health Care\" },\r\n  { id: \"Insurance\", value: \"Insurance\" },\r\n  { id: \"Internet\", value: \"Internet\" },\r\n  { id: \"Lodging\", value: \"Lodging\" },\r\n  { id: \"Merchandise\", value: \"Merchandise\" },\r\n  { id: \"Other\", value: \"Other\" },\r\n  { id: \"Other Services\", value: \"Other Services\" },\r\n  { id: \"Other Travel\", value: \"Other Travel\" },\r\n  { id: \"Payment/Credit\", value: \"Payment/Credit\" },\r\n  { id: \"Phone/Cable\", value: \"Phone/Cable\" },\r\n  { id: \"Phone\", value: \"Phone\" },\r\n  { id: \"Professional Services\", value: \"Professional Services\" },\r\n  { id: \"Subscriptions\", value: \"Subscriptions\" },\r\n  { id: \"TV/Cable\", value: \"TV/Cable\" },\r\n  { id: \"Work Expense\", value: \"Work Expense\" },\r\n];\r\n\r\n\r\nexport const parseDate = (dateString) => {\r\n  var year = '';\r\n  var month = '';\r\n  var day = '';\r\n\r\n  //  yyyy-mm-dd format\r\n  if (dateString[4] === '-') {\r\n    year = Number(dateString.slice(0, 4));\r\n    month = Number(dateString.slice(5, 7));\r\n    day = Number(dateString.slice(8, 10));\r\n  }\r\n\r\n  //  mm/dd/yyy format\r\n  else {\r\n    //get month\r\n    var index = 0;\r\n    var checkChar = dateString[index];\r\n    while (checkChar !== '/') {\r\n      month += checkChar;\r\n      index += 1;\r\n      checkChar = dateString[index];\r\n    }\r\n    month = Number(month);\r\n\r\n    //get day\r\n    index += 1;\r\n    checkChar = dateString[index];\r\n    while (checkChar !== '/') {\r\n      day += checkChar;\r\n      index += 1;\r\n      checkChar = dateString[index];\r\n    }\r\n    day = Number(day);\r\n\r\n    //get year\r\n    index += 1;\r\n    year = Number(dateString.slice(index, index + 4));\r\n  }\r\n\r\n  //set return object\r\n  const returnObj = {\r\n    year: year,\r\n    month: month,\r\n    day: day\r\n  }\r\n  return returnObj;\r\n}\r\n\r\nexport const getHeaders = (data) => {\r\n  if (data[0]) {\r\n    var headers = Object.keys(data[0]);\r\n    headers = headers.filter((value) => {\r\n      if (value === \"Posted Date\" || value === \"id\" || value === \"Card No.\") {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    var descriptionOptions = [];\r\n    for (const index in data) {\r\n      if (!(descriptionOptions.includes(data[index]['Description']))) {\r\n        descriptionOptions.push(data[index]['Description']);\r\n      }\r\n    }\r\n    const descriptionObjectArray = descriptionOptions.map((description) => {\r\n      return { id: description, value: description }\r\n    });\r\n\r\n\r\n    const headersObject = headers.map((value, index) => {\r\n      var returnObject = {\r\n        style: { width: 150, textAlign: 'left' },\r\n        key: value,\r\n        name: value,\r\n        numeric: false,\r\n        edit: false,\r\n        filter: false,\r\n      }\r\n      if (value === \"Category\") {\r\n        returnObject.className = 'category';\r\n        returnObject.theme = 'dropdown';\r\n        returnObject.edit = true;\r\n        returnObject.filter = true;\r\n        returnObject.options = [{ id: \"All Categories\", value: \"All Categories\" }, ...categoryOptions];\r\n      }\r\n      if (value === \"Credit\" || value === \"Debit\") {\r\n        returnObject.numeric = true;\r\n        returnObject.theme = 'currency';\r\n        returnObject.style.width = 75;\r\n      }\r\n      if (value === \"Description\") {\r\n        returnObject.className = 'description';\r\n        returnObject.style.width = 300;\r\n        returnObject.style.textAlign = 'left';\r\n        returnObject.filter = true;\r\n        returnObject.options = [{ id: \"All Descriptions\", value: \"All Descriptions\" }, ...descriptionObjectArray];\r\n      }\r\n      return returnObject;\r\n    })\r\n    return headersObject;\r\n  }\r\n  else return [\"\"];\r\n}\r\n\r\n\r\n//get min and max dates of data passed to function\r\nexport const getMinMaxDate = (data) => {\r\n  var minDate = new Date();\r\n  var maxDate = new Date();\r\n  data.map((entry, index) => {\r\n    if (index === 0) {\r\n      minDate = entry[\"Transaction Date\"];\r\n      maxDate = entry[\"Transaction Date\"];\r\n    }\r\n    else if (entry[\"Transaction Date\"] < minDate) { minDate = entry[\"Transaction Date\"] }\r\n    else if (entry[\"Transaction Date\"] > maxDate) { maxDate = entry[\"Transaction Date\"] }\r\n    return null;\r\n  })\r\n  return ([minDate, maxDate]);\r\n}\r\n\r\n\r\nexport const getTextDate = (date) => {\r\n  const monthNum = Number(date.getUTCMonth()) + 1\r\n  var monthText = monthNum.toString();\r\n  if (monthNum < 10) {\r\n    monthText = \"0\" + monthText;\r\n  }\r\n\r\n  const dayNum = Number(date.getUTCDate());\r\n  var dayText = dayNum.toString();\r\n  if (dayNum < 10) {\r\n    dayText = \"0\" + dayText;\r\n  }\r\n\r\n  const textDate = monthText + \"-\" + dayText + '-' + date.getUTCFullYear();\r\n  return textDate;\r\n}\r\n\r\n//set table data based on specified date range\r\nexport const setTableData = (data, dateRange) => {\r\n  var filteredData = data.filter((entry) => {\r\n    const checkDate = entry[\"Transaction Date\"];\r\n    const minTimeCorrection = 24 * 3600000;\r\n    if ((checkDate.getTime() + minTimeCorrection) <= dateRange[0]\r\n      || (checkDate.getTime()) > dateRange[1]) {\r\n      return false\r\n    }\r\n    else return true\r\n  })\r\n\r\n  const tableData = filteredData.map((entry) => {\r\n    return {\r\n      id: entry.id,\r\n      \"Transaction Date\": getTextDate(entry[\"Transaction Date\"]),\r\n      \"Posted Date\": getTextDate(entry[\"Posted Date\"]),\r\n      Category: entry.Category,\r\n      Description: entry.Description,\r\n      Credit: Number(entry.Credit).toFixed(2),\r\n      Debit: Number(entry.Debit).toFixed(2),\r\n    }\r\n  })\r\n  return tableData;\r\n}\r\n\r\nexport const filterCategories = (data, filterValue) => {\r\n  let filteredData = data;\r\n  if (filterValue !== \"All Categories\") {\r\n    filteredData = data.filter((entry) => {\r\n      return entry.Category === filterValue;\r\n    })\r\n  }\r\n  return filteredData;\r\n}\r\nexport const filterDescriptions = (data, filterValue) => {\r\n  let filteredData = data;\r\n  if (filterValue !== \"All Descriptions\") {\r\n    filteredData = data.filter((entry) => {\r\n      return entry.Description === filterValue;\r\n    })\r\n  }\r\n  return filteredData;\r\n}\r\n\r\n//set pie graph data based on specified date range\r\nexport const setAnalysisData = (data, dateRange) => {\r\n  var filteredData = data.filter((entry) => {\r\n    const checkDate = entry[\"Transaction Date\"];\r\n    const minTimeCorrection = 24 * 3600000;\r\n    if ((checkDate.getTime() + minTimeCorrection) <= dateRange[0]\r\n      || (checkDate.getTime()) > dateRange[1]) {\r\n      return false\r\n    }\r\n    else return true\r\n  })\r\n\r\n  const analysisData = filteredData.map((entry) => {\r\n    return {\r\n      id: entry.id,\r\n      \"Transaction Date\": getTextDate(entry[\"Transaction Date\"]),\r\n      \"Posted Date\": getTextDate(entry[\"Posted Date\"]),\r\n      Category: entry.Category,\r\n      Description: entry.Description,\r\n      Credit: Number(entry.Credit).toFixed(2),\r\n      Debit: Number(entry.Debit).toFixed(2),\r\n    }\r\n  })\r\n  return analysisData;\r\n}\r\n\r\nexport const sortCategoryCosts = (a, b) => {\r\n  if (a[1] === b[1]) {\r\n    return 0;\r\n  }\r\n  else {\r\n    return (a[1] > b[1]) ? -1 : 1;\r\n  }\r\n}\r\n\r\nexport const sortTableCosts = (a, b) => {\r\n  if (Number(a['Debit']) === Number(b['Debit'])) {\r\n    return 0;\r\n  }\r\n  else {\r\n    return (Number(a['Debit']) > Number(b['Debit'])) ? -1 : 1;\r\n  }\r\n}\r\n\r\nexport const groupCategories = (data) => {\r\n  let graphValues = {};\r\n  for (const index in data) {\r\n    if (data[index]['Category'] in graphValues) {\r\n      if (Number(data[index]['Debit']) > 0) {\r\n        graphValues[data[index]['Category']] += Number(data[index]['Debit']);\r\n      }\r\n      else if (Number(data[index]['Credit']) > 0) {\r\n        graphValues[data[index]['Category']] -= Number(data[index]['Credit']);\r\n      }\r\n    }\r\n    else if (data[index]['Category'] !== \"Payment/Credit\") {\r\n      if (Number(data[index]['Debit']) > 0) {\r\n        graphValues[data[index]['Category']] = Number(data[index]['Debit']);\r\n      }\r\n      else if (Number(data[index]['Credit']) > 0) {\r\n        graphValues[data[index]['Category']] = Number(data[index]['Credit']) * -1;\r\n      }\r\n    }\r\n  }\r\n  graphValues = Object.entries(graphValues);\r\n  graphValues.sort(sortCategoryCosts);\r\n  const graphData = graphValues.map((category) => {\r\n    return { name: category[0], value: category[1] }\r\n  })\r\n  return graphData;\r\n}\r\n\r\nexport const formatData = (data) => {\r\n  const formattedData = data.map((entry, index) => {\r\n    var newPostDate = {};\r\n    var newTransactionDate = {};\r\n    const postedDateObj = parseDate(entry[\"Posted Date\"]);\r\n    const transactionDateObj = parseDate(entry[\"Transaction Date\"]);\r\n    newPostDate = new Date(Date.UTC(postedDateObj.year, (postedDateObj.month - 1), postedDateObj.day));\r\n    newTransactionDate = new Date(Date.UTC(transactionDateObj.year, (transactionDateObj.month - 1), transactionDateObj.day));\r\n    return {\r\n      id: entry._id,\r\n      \"Transaction Date\": newTransactionDate,\r\n      \"Posted Date\": newPostDate,\r\n      Category: entry.Category,\r\n      Description: entry.Description,\r\n      Credit: Number(entry.Credit).toFixed(2),\r\n      Debit: Number(entry.Debit).toFixed(2),\r\n    }\r\n  })\r\n  return formattedData;\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DataTable from './DataTable.js';\r\nimport AddTransactionPopup from './AddTransactionPopup.js';\r\nimport Slider from './Slider.js';\r\nimport Button from '@material-ui/core/Button';\r\nimport Loader from './Loader.js';\r\nimport * as FormatData from '../scripts/FormatData.js';\r\nimport * as ServerRoutes from '../routes/ServerRoutes.js';\r\nimport * as actions from '../redux/actions.js';\r\n\r\nclass ViewTransactions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.tableStart = 90; //number of days to show as default table date range\r\n    this.filterCategories = true;\r\n    this.state = {\r\n      loading: true,\r\n      redirect: \"\",\r\n      importData: [{ \"Transaction Date\": new Date(), \"Posted Date\": new Date() }],\r\n      tableData: [{ \"Transaction Date\": new Date(), \"Posted Date\": new Date() }],\r\n      categoryData: [{ \"Transaction Date\": new Date(), \"Posted Date\": new Date() }],\r\n      sliderInit: [new Date((new Date()).getTime() - (86400000 * this.tableStart)), new Date()],\r\n      sliderRange: [],\r\n      tableHeaders: [],\r\n      dateRange: [new Date(0), new Date()],\r\n      updateCategoryRows: [],\r\n      editCategories: false,\r\n      refresh: false,\r\n      addTransactionPopup: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    //format data and set component state\r\n    const formattedData = FormatData.formatData(this.props.data);\r\n    const tableData = FormatData.setTableData(formattedData, this.state.sliderInit);\r\n    const dateRange = FormatData.getMinMaxDate(formattedData);\r\n    this.setState({\r\n      tableData: tableData,\r\n      dateRange: dateRange,\r\n      tableHeaders: FormatData.getHeaders(tableData),\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  getData = async () => {\r\n    try {\r\n      //call redux fetchData action\r\n      await this.props.fetchData()\r\n\r\n      //format data and set component state\r\n      const formattedData = FormatData.formatData(this.props.data);\r\n      let tableData = [];\r\n      if (this.state.refresh) {\r\n        tableData = FormatData.setTableData(formattedData, this.state.sliderRange);\r\n      }\r\n      else {\r\n        tableData = FormatData.setTableData(formattedData, this.state.sliderInit);\r\n      }\r\n      const dateRange = FormatData.getMinMaxDate(formattedData);\r\n      this.setState({\r\n        tableData: tableData,\r\n        dateRange: dateRange,\r\n        sliderInit: [new Date((new Date()).getTime() - (86400000 * this.tableStart)), new Date()],\r\n      \ttableHeaders: FormatData.getHeaders(tableData),\r\n        loading: false\r\n      });\r\n    }\r\n    catch (err) { console.log(\"Unable to retrieve data -->\" + err) };\r\n  }\r\n\r\n  handleDateUpdate = (dateRange) => {\r\n    this.setState({ loading: true });\r\n    const formattedData = FormatData.formatData(this.props.data);\r\n    const tableData = FormatData.setTableData(formattedData, dateRange.value)\r\n    this.setState({\r\n      sliderRange: dateRange.value,\r\n      tableData: tableData,\r\n      tableHeaders: FormatData.getHeaders(tableData),\r\n    }, () => { this.setState({ loading: false }) });\r\n  }\r\n\r\n  handleRedirectImport = () => {\r\n    this.props.handleRedirect('Import Transaction Data');\r\n  }\r\n\r\n  updateCategory = (newCategory, id, index) => {\r\n    let updatedTable = this.state.tableData;\r\n    updatedTable[index].Category = newCategory;\r\n\r\n    let updatedCategoryArray = this.state.updateCategoryRows\r\n    updatedCategoryArray.push({ id, newCategory });\r\n\r\n    this.setState({\r\n      tableData: updatedTable,\r\n      updateCategoryRows: updatedCategoryArray,\r\n    });\r\n  }\r\n\r\n  handleFilter = (filterCategory, filterClass) => {\r\n    switch (filterClass.value) {\r\n      case ('category'):{\r\n    \t\tconst formattedData = FormatData.formatData(this.props.data);\r\n    \t\tconst tableData = FormatData.setTableData(formattedData, this.state.sliderRange)\r\n        const categoryData = FormatData.filterCategories(tableData, filterCategory);\r\n        this.setState({\r\n          tableData: categoryData,\r\n          categoryData: categoryData,\r\n      \t\ttableHeaders: FormatData.getHeaders(categoryData),\r\n        });\r\n        break;\r\n      }\r\n      case ('description'): {\r\n        console.log(this.state);\r\n        const filteredTable = FormatData.filterDescriptions(this.state.categoryData, filterCategory);\r\n        this.setState({\r\n          tableData: filteredTable,\r\n        });     \r\n        break;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n    \r\n  }\r\n\r\n  handleEditCategories = () => {\r\n    this.setState({\r\n      editCategories: true,\r\n    });\r\n  }\r\n\r\n  handleSaveCategories = () => {\r\n    this.setState({\r\n      loading: true,\r\n      refresh: true,\r\n      editCategories: false\r\n    }, async () => {\r\n      if (this.state.updateCategoryRows[0]) {\r\n        await (ServerRoutes.updateCategories(this.state.updateCategoryRows));\r\n        await (this.getData());\r\n      }\r\n      this.setState({ updateCategoryRows: [], loading: false, refresh: false });\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  getEditButton = () => {\r\n    if (this.state.editCategories) {\r\n      return (\r\n        <Button id='save-data-button' onClick={this.handleSaveCategories} variant=\"contained\" color=\"primary\" style={{ marginTop: '10px', marginLeft: '20px', backgroundColor: '#047700' }}>\r\n          Save Data\r\n            </Button>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <Button id='edit-categories-button' onClick={this.handleEditCategories} variant=\"contained\" color=\"primary\" style={{ marginTop: '10px', marginLeft: '20px' }}>\r\n          Edit Categories\r\n            </Button>\r\n      );\r\n    }\r\n\r\n  }\r\n  \r\n  handleAddTransaction = () => {\r\n    this.setState({\r\n      addTransactionPopup: true\r\n    })\r\n  }\r\n  \r\n  handleClosePopup = () => {\r\n    console.log('test');\r\n    this.setState({\r\n      addTransactionPopup: false \r\n    })   \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      tableData,\r\n      tableHeaders,\r\n      dateRange,\r\n      loading,\r\n      editCategories,\r\n      sliderInit,\r\n      addTransactionPopup\r\n    } = this.state\r\n    if (loading) {\r\n      return (\r\n        <div className=\"app\" style={{ width: '90%', margin: 'auto' }}>\r\n          <div className='table-slider' style={{ maxWidth: '930px' }}>\r\n            <Slider minWidth='683px' handleUpdate={this.handleDateUpdate} dateRange={dateRange} buttonText={\"Update Table\"} sliderInit={sliderInit} />\r\n            <div style={{ display: 'flex', justifyContent: 'center', marginTop: '50px' }}>\r\n              <Loader />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    else if (addTransactionPopup) {\r\n      return (<AddTransactionPopup closePopup={this.handleClosePopup}/>);\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"app\" style={{ width: '90%', margin: 'auto' }}>\r\n          <div className='table-slider' style={{ maxWidth: '930px' }}>\r\n            <Slider minWidth='683px' handleUpdate={this.handleDateUpdate} dateRange={dateRange} buttonText={\"Update Table\"} sliderInit={sliderInit} />\r\n            <DataTable\r\n              filterChange={this.handleFilter}\r\n              edit={editCategories}\r\n              filter={this.filterCategories}\r\n              categoryChange={this.updateCategory}\r\n              data={tableData}\r\n              headers={tableHeaders} />\r\n            <Button onClick={this.handleRedirectImport} variant=\"contained\" color=\"primary\" style={{ marginTop: '10px' }}>\r\n              Import New Data\r\n            </Button>\r\n            {this.getEditButton()}\r\n            <Button onClick={this.handleAddTransaction} variant=\"contained\" color=\"secondary\" style={{ marginTop: '10px', marginLeft: '20px' }}>\r\n             Add Transaction \r\n            </Button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { data: state.data }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(ViewTransactions);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Loader from './Loader.js';\r\nimport Button from '@material-ui/core/Button';\r\nimport DataTable from './DataTable.js';\r\nimport * as actions from '../redux/actions.js';\r\nimport * as FormatData from '../scripts/FormatData.js';\r\n\r\nimport * as ServerRoutes from '../routes/ServerRoutes.js';\r\n\r\nclass FileUpload extends Component {\r\n  state = {\r\n    selectedFile: null,\r\n    loading: false,\r\n    dataLoaded: false,\r\n    reDirect: false,\r\n  };\r\n\r\n  handleChangeFile = (event) => {\r\n    this.setState({\r\n      selectedFile: event.target.files[0],\r\n      loaded: 0,\r\n    }, () => {\r\n      this.handleDataFile(event, this.state.selectedFile);\r\n    })\r\n  }\r\n\r\n  getData = async () => {\r\n    try {\r\n      //call redux fetchData action\r\n      await this.props.fetchData()\r\n\r\n      //format data and set component state\r\n      const formattedData = FormatData.formatData(this.props.data, true);\r\n      const tableData = FormatData.setTableData(formattedData, FormatData.getMinMaxDate(formattedData));\r\n      const headersObject = FormatData.getHeaders(this.props.data);\r\n      const dateRange = FormatData.getMinMaxDate(formattedData);\r\n      this.setState({\r\n        data: formattedData,\r\n        tableData: tableData,\r\n        dateRange: dateRange,\r\n        tableHeaders: headersObject\r\n      });\r\n    }\r\n    catch (err) { console.log(\"Unable to retrieve data -->\" + err) };\r\n  }\r\n\r\n  handleImport = (event) => {\r\n    this.setState({ loading: true }, async () => {\r\n      try {\r\n        await ServerRoutes.importData(this.state.importData);\r\n        await this.getData();\r\n        //route to ViewTransactions page\r\n        this.setState({ loading: false }, () => {\r\n          console.log('test');\r\n          this.props.handleRedirect('View Transaction Data');\r\n        });\r\n      }\r\n      catch (err) { alert(\"Unable to import data -->\" + err) }\r\n    });\r\n  }\r\n\r\n  //async function to send csv data file to server and return as JSON object\r\n  handleDataFile = async (event) => {\r\n    var dataFileToSend = new FormData();\r\n    dataFileToSend.append('file', this.state.selectedFile);\r\n\r\n    var res = {};\r\n    try { res = await ServerRoutes.convertData(dataFileToSend) }\r\n    catch (err) { alert(\"Unable to import data -->\" + err) }\r\n\r\n    const headersObject = FormatData.getHeaders(res);\r\n    console.log(headersObject);\r\n    const formattedData = FormatData.formatData(res, false);\r\n    const dateRange = FormatData.getMinMaxDate(formattedData);\r\n\r\n    this.setState({\r\n      dateRange: dateRange,\r\n      tableData: FormatData.setTableData(formattedData, dateRange),\r\n      importData: formattedData,\r\n      tableHeaders: headersObject,\r\n      loading: false,\r\n      dataLoaded: true\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      tableData,\r\n      tableHeaders,\r\n      loading,\r\n      dataLoaded,\r\n    } = this.state\r\n\r\n    if (loading) {\r\n      return (\r\n        <div style={{ display: 'flex', justifyContent: 'center', marginTop: '50px' }}>\r\n          <Loader />\r\n        </div>\r\n      );\r\n    }\r\n    else if (dataLoaded) {\r\n      return (\r\n        <div className='file-upload' style={{ maxWidth: '930px'}}>\r\n          <div>\r\n            <input type=\"file\" className=\"file\" onChange={this.handleChangeFile} /> <br />\r\n          </div>\r\n          <div className='table-import' >\r\n            <DataTable data={tableData} headers={tableHeaders} />\r\n            <Button onClick={this.handleImport} variant=\"contained\" color=\"primary\" style={{ marginTop: '10px' }}>\r\n              Import Data\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div className='file-upload' style={{ maxWidth: '930px' }}>\r\n          <div>\r\n            <input type=\"file\" className=\"file\" onChange={this.handleChangeFile} /> <br />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { data: state.data }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(FileUpload);","// export default const colors = [\"#d5f4e6\",\"#36486b\",\"#fefbd8\",\"#618685\", \"#50394c\", \"#80ced6\", \"#89adec\", \"#6c6c6f\"];\r\nexport const colors = [\r\n// '#F44336',\r\n// '#FFEBEE',\r\n// '#FFCDD2',\r\n// '#EF9A9A',\r\n// '#E57373',\r\n// '#EF5350',\r\n// '#E53935',\r\n// '#D32F2F',\r\n// '#C62828',\r\n'#B71C1C',\r\n'#D50000',\r\n// '#FF8A80',\r\n// '#FF5252',\r\n// '#FF1744',\r\n// '#FCE4EC',\r\n// '#F8BBD0',\r\n// '#F48FB1',\r\n// '#F06292',\r\n// '#EC407A',\r\n// '#E91E63',\r\n'#D81B60',\r\n// '#C2185B',\r\n// '#AD1457',\r\n// '#880E4F',\r\n// '#FF80AB',\r\n// '#FF4081',\r\n// '#F50057',\r\n// '#C51162',\r\n// '#F3E5F5',\r\n// '#E1BEE7',\r\n// '#CE93D8',\r\n// '#BA68C8',\r\n// '#9C27B0',\r\n// '#8E24AA',\r\n// '#7B1FA2',\r\n'#6A1B9A',\r\n// '#4A148C',\r\n// '#EA80FC',\r\n// '#E040FB',\r\n// '#D500F9',\r\n// '#AA00FF',\r\n// '#AB47BC',\r\n// '#EDE7F6',\r\n// '#D1C4E9',\r\n// '#B39DDB',\r\n// '#9575CD',\r\n// '#673AB7',\r\n'#5E35B1',\r\n// '#512DA8',\r\n// '#4527A0',\r\n// '#311B92',\r\n// '#B388FF',\r\n'#7C4DFF',\r\n'#7E57C2',\r\n// '#651FFF',\r\n// '#6200EA',\r\n// '#E8EAF6',\r\n// '#C5CAE9',\r\n// '#9FA8DA',\r\n// '#5C6BC0',\r\n// '#3F51B5',\r\n// '#3949AB',\r\n// '#303F9F',\r\n'#283593',\r\n// '#1A237E',\r\n// '#8C9EFF',\r\n// '#536DFE',\r\n// '#3D5AFE',\r\n'#304FFE',\r\n'#7986CB',\r\n// '#E3F2FD',\r\n// '#BBDEFB',\r\n'#90CAF9',\r\n// '#64B5F6',\r\n// '#42A5F5',\r\n// '#2196F3',\r\n// '#1E88E5',\r\n'#1976D2',\r\n// '#1565C0',\r\n// '#0D47A1',\r\n// '#82B1FF',\r\n// '#448AFF',\r\n'#2979FF',\r\n// '#2962FF',\r\n// '#E1F5FE',\r\n// '#B3E5FC',\r\n'#81D4FA',\r\n// '#4FC3F7',\r\n// '#29B6F6',\r\n// '#03A9F4',\r\n'#039BE5',\r\n// '#0288D1',\r\n// '#0277BD',\r\n// '#01579B',\r\n// '#80D8FF',\r\n'#40C4FF',\r\n// '#00B0FF',\r\n// '#0091EA',\r\n// '#E0F7FA',\r\n// '#B2EBF2',\r\n// '#80DEEA',\r\n// '#4DD0E1',\r\n// '#26C6DA',\r\n// '#00BCD4',\r\n'#00ACC1',\r\n// '#0097A7',\r\n// '#00838F',\r\n// '#006064',\r\n// '#84FFFF',\r\n// '#18FFFF',\r\n// '#00E5FF',\r\n'#00B8D4',\r\n// '#E0F2F1',\r\n// '#B2DFDB',\r\n// '#80CBC4',\r\n// '#4DB6AC',\r\n// '#26A69A',\r\n// '#009688',\r\n// '#00897B',\r\n// '#00796B',\r\n'#00695C',\r\n// '#004D40',\r\n// '#A7FFEB',\r\n// '#64FFDA',\r\n// '#1DE9B6',\r\n'#00BFA5',\r\n// '#E8F5E9',\r\n// '#C8E6C9',\r\n// '#A5D6A7',\r\n'#81C784',\r\n// '#66BB6A',\r\n// '#4CAF50',\r\n// '#43A047',\r\n// '#388E3C',\r\n// '#2E7D32',\r\n// '#1B5E20',\r\n// '#B9F6CA',\r\n// '#69F0AE',\r\n// '#00E676',\r\n// '#00C853',\r\n// '#F1F8E9',\r\n// '#DCEDC8',\r\n// '#C5E1A5',\r\n// '#AED581',\r\n// '#9CCC65',\r\n// '#8BC34A',\r\n// '#7CB342',\r\n// '#689F38',\r\n// '#558B2F',\r\n// '#33691E',\r\n// '#CCFF90',\r\n// '#B2FF59',\r\n// '#76FF03',\r\n// '#64DD17',\r\n// '#F9FBE7',\r\n// '#F0F4C3',\r\n// '#E6EE9C',\r\n// '#DCE775',\r\n// '#D4E157',\r\n// '#CDDC39',\r\n// '#C0CA33',\r\n// '#AFB42B',\r\n// '#9E9D24',\r\n// '#827717',\r\n// '#F4FF81',\r\n// '#EEFF41',\r\n// '#C6FF00',\r\n// '#AEEA00',\r\n// '#FFFDE7',\r\n// '#FFF9C4',\r\n// '#FFF59D',\r\n// '#FFF176',\r\n// '#FFEE58',\r\n// '#FFEB3B',\r\n// '#FDD835',\r\n// '#FBC02D',\r\n// '#F9A825',\r\n// '#F57F17',\r\n// '#FFFF8D',\r\n// '#FFFF00',\r\n// '#FFEA00',\r\n// '#FFD600',\r\n// '#FFF8E1',\r\n// '#FFECB3',\r\n// '#FFE082',\r\n// '#FFD54F',\r\n// '#FFCA28',\r\n// '#FFC107',\r\n// '#FFB300',\r\n// '#FFA000',\r\n// '#FF8F00',\r\n// '#FF6F00',\r\n// '#FFE57F',\r\n// '#FFD740',\r\n// '#FFC400',\r\n// '#FFAB00',\r\n// '#FFF3E0',\r\n// '#FFE0B2',\r\n// '#FFCC80',\r\n// '#FFB74D',\r\n// '#FFA726',\r\n// '#FF9800',\r\n// '#FB8C00',\r\n// '#F57C00',\r\n// '#EF6C00',\r\n// '#E65100',\r\n// '#FFD180',\r\n// '#FFAB40',\r\n// '#FF9100',\r\n// '#FF6D00',\r\n// '#FBE9E7',\r\n// '#FFCCBC',\r\n// '#FFAB91',\r\n// '#FF8A65',\r\n// '#FF7043',\r\n// '#FF5722',\r\n// '#F4511E',\r\n// '#E64A19',\r\n// '#D84315',\r\n// '#BF360C',\r\n// '#FF9E80',\r\n// '#FF6E40',\r\n// '#FF3D00',\r\n// '#DD2C00',\r\n// '#EFEBE9',\r\n// '#D7CCC8',\r\n// '#BCAAA4',\r\n// '#A1887F',\r\n// '#8D6E63',\r\n// '#795548',\r\n// '#6D4C41',\r\n// '#5D4037',\r\n// '#4E342E',\r\n// '#3E2723',\r\n// '#FAFAFA',\r\n// '#F5F5F5',\r\n// '#EEEEEE',\r\n// '#E0E0E0',\r\n// '#BDBDBD',\r\n// '#9E9E9E',\r\n// '#757575',\r\n// '#616161',\r\n// '#424242',\r\n// '#212121',\r\n// '#ECEFF1',\r\n// '#CFD8DC',\r\n// '#B0BEC5',\r\n// '#90A4AE',\r\n// '#78909C',\r\n// '#607D8B',\r\n// '#546E7A',\r\n// '#455A64',\r\n// '#37474F',\r\n// '#263238',\r\n// '#000000',\r\n];","import React, { useEffect } from 'react';\r\nimport { PieChart, Pie, Cell, Sector } from 'recharts';\r\nimport { colors } from '../templates/colors.js'\r\n\r\n\r\n\r\nconst renderActiveShape = (props) => {\r\n  const RADIAN = Math.PI / 180;\r\n  const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\r\n    fill, percent, value, name } = props;\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 8) * cos;\r\n  const sy = cy + (outerRadius + 8) * sin;\r\n  const mx = cx + (outerRadius + 15) * cos;\r\n  const my = cy + (outerRadius + 15) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? 'start' : 'end';\r\n\r\n  return (\r\n    <g>\r\n      <text fontSize='large' fontWeight='bolder' x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>{name}</text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={fill}\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill={fill}\r\n      />\r\n      <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n      {/* <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{name}</text> */}\r\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#333\">\r\n        {`Total: $${value.toFixed(2)}`}\r\n      </text>\r\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={2 * 18} textAnchor={textAnchor} fill=\"#999\">\r\n        {`(${(percent * 100).toFixed(2)}%)`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default function PieGraph(props) {\r\n  const data = props.data;\r\n  const [activeIndex, setActiveIndex] = React.useState(0);\r\n  const [chartColors, setChartColors] = React.useState(data.map((value, index) => { return colors[index] }));\r\n\r\n  const getColors = (data) => {\r\n    const newColors = data.map((value, index) => { return colors[index] })\r\n    setChartColors(newColors);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getColors(data);\r\n  }, [data])\r\n\r\n  const chartClick = (event) => {\r\n    props.handleClick(event.name);\r\n  }\r\n\r\n  const onPieEnter = (data, index) => { setActiveIndex(index) }\r\n\r\n  return (\r\n    <div>\r\n      <PieChart width={props.minWidth} height={500}>\r\n        <Pie\r\n          activeIndex={activeIndex}\r\n          activeShape={renderActiveShape}\r\n          onMouseEnter={onPieEnter}\r\n          onClick={chartClick}\r\n          data={data}\r\n          dataKey=\"value\"\r\n          nameKey=\"name\"\r\n          cx=\"45%\"\r\n          cy=\"50%\"\r\n          outerRadius={150}\r\n          innerRadius={100}\r\n        >\r\n          {\r\n            data.map((entry, index) => (\r\n              <Cell dataKey=\"value\" key={`cell-${index}`} fill={chartColors[index]} />\r\n            ))\r\n          }\r\n        </Pie >\r\n      </PieChart>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PieChart from './PieChart.js'\r\nimport Slider from './Slider.js'\r\nimport DataTable from './DataTable.js';\r\nimport '../css/BudgetAnalysis.css'\r\nimport * as FormatData from '../scripts/FormatData.js';\r\n\r\nconst columnStyle = () => ({\r\n  graphStyle: {\r\n    height: 600,\r\n  },\r\n  tableStyle: {\r\n    height: 600,\r\n  }\r\n})\r\n\r\nclass BudgetAnalysis extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.tableStart = 60 //number of days to show as default table date range\r\n    this.colStyle = columnStyle();\r\n    this.sliderInit = [new Date((new Date()).getTime() - (86400000 * this.tableStart)), new Date()];\r\n    this.formattedData = FormatData.formatData(this.props.data);\r\n    this.analysisDataStart = FormatData.setAnalysisData(this.formattedData, this.sliderInit);\r\n    this.graphDataStart = FormatData.groupCategories(this.analysisDataStart);\r\n    this.state = {\r\n      sliderInit: this.sliderInit,\r\n      dateRange: FormatData.getMinMaxDate(this.formattedData),\r\n      analysisData: this.analysisDataStart,\r\n      graphData: this.graphDataStart,\r\n      tableHeaders: FormatData.getHeaders(this.analysisDataStart),\r\n      tableData: this.analysisDataStart,\r\n    }\r\n  }\r\n\r\n  handleDateUpdate = (dateRange) => {\r\n    console.log(this.state.tableData);\r\n    const newDate = [new Date(dateRange.value[0]), new Date(dateRange.value[1])];\r\n    const newData = FormatData.setAnalysisData(this.formattedData, newDate);\r\n    const newGraph = FormatData.groupCategories(newData);\r\n    this.setState({ graphData: [], loading: true });\r\n    this.setState({\r\n      analysisData: newData,\r\n      graphData: newGraph,\r\n      tableData: newData,\r\n    }, () => { \r\n      console.log(this.state.tableData);\r\n      this.setState({ loading: false }) \r\n    });\r\n  }\r\n\r\n  handleCategoryFilter = (filterCategory) => {\r\n    const filteredTable = FormatData.filterCategories(this.state.analysisData, filterCategory);\r\n    this.setState({tableData: filteredTable.sort(FormatData.sortTableCosts)});\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      dateRange,\r\n      sliderInit,\r\n      graphData,\r\n      tableData,\r\n      tableHeaders,\r\n    } = this.state\r\n    const graphStyle = this.colStyle.graphStyle;\r\n    const tableStyle = this.colStyle.tableStyle;\r\n    return (\r\n      <div className='ui stackable two column grid first-row'>\r\n        <div className=\"six wide column column-graph\">\r\n          <div className=\"ui segment\" style={graphStyle}>\r\n            <Slider handleUpdate={this.handleDateUpdate} dateRange={dateRange} buttonText={\"Update Analysis\"} sliderInit={sliderInit} />\r\n            <h2 style={{ color: '#3f51b5', position: 'absolute', width: 600, textAlign: 'center', paddingTop: '20px' }}>Expenses by Category</h2>\r\n            <PieChart handleClick={this.handleCategoryFilter} minWidth={650} data={graphData} />\r\n          </div>\r\n        </div>\r\n        <div className=\"nine wide column column-table\" >\r\n          <div className=\"ui segment\" style={tableStyle}>\r\n            <DataTable\r\n              className='analysis-table'\r\n              data={tableData}\r\n              headers={tableHeaders} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { data: state.data }\r\n}\r\nexport default connect(mapStateToProps)(BudgetAnalysis)","import React from 'react';\r\n\r\nexport default function Home(props) {\r\n  return(\r\n    <div>\r\n    \t<h1>HOME (Under Development)</h1>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function Settings(props) {\r\n  return(\r\n    <div>\r\n    \t<h1>Budget Settings</h1>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ViewTransactions from './ViewTransactions';\r\nimport FileUpload from './FileUpload';\r\nimport BudgetAnalysis from './BudgetAnalysis';\r\nimport Home from './Home';\r\nimport Settings from './Settings';\r\n\r\nconst drawerWidth = 275;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst getNavOptions = () => ({\r\n  options: [\r\n  \t{ text: \"Home (Under Development)\", icon: \"large home icon\"},\r\n  \t{ text: \"View Transaction Data\", icon: \"large database icon\"},\r\n  \t{ text: \"Analysis\", icon: \"large table icon\"},\r\n  \t{ text: \"Import Transaction Data\", icon: \"large upload icon\"},\r\n  \t{ text: \"Budget Input Settings\", icon: \"large cog icon\"},\r\n  ]\r\n})\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n  const navOptions = getNavOptions().options;\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [navSelect, setSelect] = React.useState('Home');\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  const handleMenuClick = (value) => {\r\n    setSelect(value);\r\n  }\r\n  \r\n  const getContent = () => {\r\n    switch( navSelect ) {\r\n      case ('View Transaction Data'):  \r\n      \treturn(<ViewTransactions handleRedirect={handleMenuClick}/>);\r\n      case ('Analysis'):\r\n        return(<BudgetAnalysis/>)\r\n      case ('Import Transaction Data'): \r\n        return(<FileUpload handleRedirect={handleMenuClick}/>);\r\n      case ('Budget Input Settings'): \r\n        return(<Settings/>);\r\n      default:\r\n        return(<Home/>);\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n  \r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n           <i className=\"bars icon\"></i>\r\n          </IconButton>\r\n                       \r\n          <Typography variant=\"h6\" noWrap>\r\n           MY BUDGET MANAGER\r\n          </Typography>\r\n                       \r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <i className=\"chevron right icon\"></i> : <i className=\"chevron left icon\"></i>}\r\n          </IconButton>\r\n        </div>\r\n\r\n        <List>\r\n          {navOptions.map((option, index) => (\r\n            <ListItem button onClick={() => handleMenuClick(option.text)} value={option.text} key={option.text}>\r\n              <ListItemIcon>{<i className={option.icon} style={{marginLeft: '10px'}}></i>}</ListItemIcon>\r\n              <ListItemText primary={option.text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n\r\n      </Drawer>\r\n\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n          {getContent()}\r\n      </main>\r\n\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchData } from '../redux/actions.js';\r\n\r\nimport NavBar from './NavBar';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.getData()\r\n  }\r\n  getData = async () => {\r\n    try {\r\n      //call redux fetchData action creator\r\n      await this.props.fetchData()\r\n    }\r\n    catch (err) { console.log(\"Unable to retrieve data -->\" + err) };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='main-div' >\r\n      \t<NavBar />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { fetchData })(App);","import { combineReducers } from 'redux';\r\n\r\nconst dataReducer = function (state = {}, action) {\r\n    switch (action.type) {\r\n        case 'fetch-data': {\r\n            return action.payload;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    data: dataReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from './components/App.js';\r\nimport reducers from './redux/reducers.js';\r\n\r\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}><App /></Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}